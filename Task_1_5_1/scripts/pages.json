[{"name":"abstract val action: Action","description":"io.github.kapkekes.calculator.Operation.action","location":"-task_1_5_1/io.github.kapkekes.calculator/-operation/action.html","searchKeys":["action","abstract val action: Action","io.github.kapkekes.calculator.Operation.action"]},{"name":"abstract val arity: Int","description":"io.github.kapkekes.calculator.Operation.arity","location":"-task_1_5_1/io.github.kapkekes.calculator/-operation/arity.html","searchKeys":["arity","abstract val arity: Int","io.github.kapkekes.calculator.Operation.arity"]},{"name":"abstract val token: String","description":"io.github.kapkekes.calculator.Operation.token","location":"-task_1_5_1/io.github.kapkekes.calculator/-operation/token.html","searchKeys":["token","abstract val token: String","io.github.kapkekes.calculator.Operation.token"]},{"name":"class Calculator(operations: Set<Operation>)","description":"io.github.kapkekes.calculator.Calculator","location":"-task_1_5_1/io.github.kapkekes.calculator/-calculator/index.html","searchKeys":["Calculator","class Calculator(operations: Set<Operation>)","io.github.kapkekes.calculator.Calculator"]},{"name":"class Complex(val real: Double = 0.0, val imaginary: Double = 0.0)","description":"io.github.kapkekes.complex.Complex","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/index.html","searchKeys":["Complex","class Complex(val real: Double = 0.0, val imaginary: Double = 0.0)","io.github.kapkekes.complex.Complex"]},{"name":"fun Calculator(operations: Set<Operation>)","description":"io.github.kapkekes.calculator.Calculator.Calculator","location":"-task_1_5_1/io.github.kapkekes.calculator/-calculator/-calculator.html","searchKeys":["Calculator","fun Calculator(operations: Set<Operation>)","io.github.kapkekes.calculator.Calculator.Calculator"]},{"name":"fun Complex(real: Double = 0.0, imaginary: Double = 0.0)","description":"io.github.kapkekes.complex.Complex.Complex","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/-complex.html","searchKeys":["Complex","fun Complex(real: Double = 0.0, imaginary: Double = 0.0)","io.github.kapkekes.complex.Complex.Complex"]},{"name":"fun cos(x: Complex): Complex","description":"io.github.kapkekes.complex.extensions.cos","location":"-task_1_5_1/io.github.kapkekes.complex.extensions/cos.html","searchKeys":["cos","fun cos(x: Complex): Complex","io.github.kapkekes.complex.extensions.cos"]},{"name":"fun evaluate(expression: String): Complex","description":"io.github.kapkekes.calculator.Calculator.evaluate","location":"-task_1_5_1/io.github.kapkekes.calculator/-calculator/evaluate.html","searchKeys":["evaluate","fun evaluate(expression: String): Complex","io.github.kapkekes.calculator.Calculator.evaluate"]},{"name":"fun log(x: Complex, base: Complex): Complex","description":"io.github.kapkekes.complex.extensions.log","location":"-task_1_5_1/io.github.kapkekes.complex.extensions/log.html","searchKeys":["log","fun log(x: Complex, base: Complex): Complex","io.github.kapkekes.complex.extensions.log"]},{"name":"fun main()","description":"io.github.kapkekes.cli.main","location":"-task_1_5_1/io.github.kapkekes.cli/main.html","searchKeys":["main","fun main()","io.github.kapkekes.cli.main"]},{"name":"fun pow(x: Complex): Complex","description":"io.github.kapkekes.complex.Complex.pow","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/pow.html","searchKeys":["pow","fun pow(x: Complex): Complex","io.github.kapkekes.complex.Complex.pow"]},{"name":"fun sin(x: Complex): Complex","description":"io.github.kapkekes.complex.extensions.sin","location":"-task_1_5_1/io.github.kapkekes.complex.extensions/sin.html","searchKeys":["sin","fun sin(x: Complex): Complex","io.github.kapkekes.complex.extensions.sin"]},{"name":"fun sqrt(x: Complex): Complex","description":"io.github.kapkekes.complex.extensions.sqrt","location":"-task_1_5_1/io.github.kapkekes.complex.extensions/sqrt.html","searchKeys":["sqrt","fun sqrt(x: Complex): Complex","io.github.kapkekes.complex.extensions.sqrt"]},{"name":"interface Operation","description":"io.github.kapkekes.calculator.Operation","location":"-task_1_5_1/io.github.kapkekes.calculator/-operation/index.html","searchKeys":["Operation","interface Operation","io.github.kapkekes.calculator.Operation"]},{"name":"object Addition : Operation","description":"io.github.kapkekes.operations.basic.Addition","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-addition/index.html","searchKeys":["Addition","object Addition : Operation","io.github.kapkekes.operations.basic.Addition"]},{"name":"object Cosine : Operation","description":"io.github.kapkekes.operations.trigonometry.Cosine","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-cosine/index.html","searchKeys":["Cosine","object Cosine : Operation","io.github.kapkekes.operations.trigonometry.Cosine"]},{"name":"object Degree : Operation","description":"io.github.kapkekes.operations.trigonometry.Degree","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-degree/index.html","searchKeys":["Degree","object Degree : Operation","io.github.kapkekes.operations.trigonometry.Degree"]},{"name":"object Division : Operation","description":"io.github.kapkekes.operations.basic.Division","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-division/index.html","searchKeys":["Division","object Division : Operation","io.github.kapkekes.operations.basic.Division"]},{"name":"object Equality : Operation","description":"io.github.kapkekes.operations.logic.Equality","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-equality/index.html","searchKeys":["Equality","object Equality : Operation","io.github.kapkekes.operations.logic.Equality"]},{"name":"object Exit : Operation","description":"io.github.kapkekes.operations.flow.Exit","location":"-task_1_5_1/io.github.kapkekes.operations.flow/-exit/index.html","searchKeys":["Exit","object Exit : Operation","io.github.kapkekes.operations.flow.Exit"]},{"name":"object False : Operation","description":"io.github.kapkekes.operations.logic.False","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-false/index.html","searchKeys":["False","object False : Operation","io.github.kapkekes.operations.logic.False"]},{"name":"object Greater : Operation","description":"io.github.kapkekes.operations.logic.Greater","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater/index.html","searchKeys":["Greater","object Greater : Operation","io.github.kapkekes.operations.logic.Greater"]},{"name":"object GreaterOrEqual : Operation","description":"io.github.kapkekes.operations.logic.GreaterOrEqual","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater-or-equal/index.html","searchKeys":["GreaterOrEqual","object GreaterOrEqual : Operation","io.github.kapkekes.operations.logic.GreaterOrEqual"]},{"name":"object IfElse : Operation","description":"io.github.kapkekes.operations.logic.IfElse","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-if-else/index.html","searchKeys":["IfElse","object IfElse : Operation","io.github.kapkekes.operations.logic.IfElse"]},{"name":"object Inequality : Operation","description":"io.github.kapkekes.operations.logic.Inequality","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-inequality/index.html","searchKeys":["Inequality","object Inequality : Operation","io.github.kapkekes.operations.logic.Inequality"]},{"name":"object Less : Operation","description":"io.github.kapkekes.operations.logic.Less","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less/index.html","searchKeys":["Less","object Less : Operation","io.github.kapkekes.operations.logic.Less"]},{"name":"object LessOrEqual : Operation","description":"io.github.kapkekes.operations.logic.LessOrEqual","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less-or-equal/index.html","searchKeys":["LessOrEqual","object LessOrEqual : Operation","io.github.kapkekes.operations.logic.LessOrEqual"]},{"name":"object Logarithm : Operation","description":"io.github.kapkekes.operations.basic.Logarithm","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-logarithm/index.html","searchKeys":["Logarithm","object Logarithm : Operation","io.github.kapkekes.operations.basic.Logarithm"]},{"name":"object Multiplication : Operation","description":"io.github.kapkekes.operations.basic.Multiplication","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-multiplication/index.html","searchKeys":["Multiplication","object Multiplication : Operation","io.github.kapkekes.operations.basic.Multiplication"]},{"name":"object Power : Operation","description":"io.github.kapkekes.operations.basic.Power","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-power/index.html","searchKeys":["Power","object Power : Operation","io.github.kapkekes.operations.basic.Power"]},{"name":"object Sine : Operation","description":"io.github.kapkekes.operations.trigonometry.Sine","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-sine/index.html","searchKeys":["Sine","object Sine : Operation","io.github.kapkekes.operations.trigonometry.Sine"]},{"name":"object SquareRoot : Operation","description":"io.github.kapkekes.operations.basic.SquareRoot","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-square-root/index.html","searchKeys":["SquareRoot","object SquareRoot : Operation","io.github.kapkekes.operations.basic.SquareRoot"]},{"name":"object Subtraction : Operation","description":"io.github.kapkekes.operations.basic.Subtraction","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-subtraction/index.html","searchKeys":["Subtraction","object Subtraction : Operation","io.github.kapkekes.operations.basic.Subtraction"]},{"name":"object True : Operation","description":"io.github.kapkekes.operations.logic.True","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-true/index.html","searchKeys":["True","object True : Operation","io.github.kapkekes.operations.logic.True"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.kapkekes.complex.Complex.equals","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.kapkekes.complex.Complex.equals"]},{"name":"open override fun hashCode(): Int","description":"io.github.kapkekes.complex.Complex.hashCode","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.kapkekes.complex.Complex.hashCode"]},{"name":"open override fun toString(): String","description":"io.github.kapkekes.complex.Complex.toString","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.kapkekes.complex.Complex.toString"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.basic.Addition.action","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-addition/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.basic.Addition.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.basic.Division.action","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-division/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.basic.Division.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.basic.Logarithm.action","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-logarithm/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.basic.Logarithm.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.basic.Multiplication.action","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-multiplication/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.basic.Multiplication.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.basic.Power.action","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-power/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.basic.Power.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.basic.SquareRoot.action","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-square-root/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.basic.SquareRoot.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.basic.Subtraction.action","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-subtraction/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.basic.Subtraction.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.flow.Exit.action","location":"-task_1_5_1/io.github.kapkekes.operations.flow/-exit/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.flow.Exit.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.Equality.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-equality/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.Equality.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.False.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-false/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.False.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.Greater.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.Greater.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.GreaterOrEqual.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater-or-equal/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.GreaterOrEqual.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.IfElse.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-if-else/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.IfElse.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.Inequality.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-inequality/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.Inequality.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.Less.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.Less.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.LessOrEqual.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less-or-equal/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.LessOrEqual.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.logic.True.action","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-true/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.logic.True.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.trigonometry.Cosine.action","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-cosine/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.trigonometry.Cosine.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.trigonometry.Degree.action","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-degree/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.trigonometry.Degree.action"]},{"name":"open override val action: Action","description":"io.github.kapkekes.operations.trigonometry.Sine.action","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-sine/action.html","searchKeys":["action","open override val action: Action","io.github.kapkekes.operations.trigonometry.Sine.action"]},{"name":"open override val arity: Int = 0","description":"io.github.kapkekes.operations.flow.Exit.arity","location":"-task_1_5_1/io.github.kapkekes.operations.flow/-exit/arity.html","searchKeys":["arity","open override val arity: Int = 0","io.github.kapkekes.operations.flow.Exit.arity"]},{"name":"open override val arity: Int = 0","description":"io.github.kapkekes.operations.logic.False.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-false/arity.html","searchKeys":["arity","open override val arity: Int = 0","io.github.kapkekes.operations.logic.False.arity"]},{"name":"open override val arity: Int = 0","description":"io.github.kapkekes.operations.logic.True.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-true/arity.html","searchKeys":["arity","open override val arity: Int = 0","io.github.kapkekes.operations.logic.True.arity"]},{"name":"open override val arity: Int = 1","description":"io.github.kapkekes.operations.basic.SquareRoot.arity","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-square-root/arity.html","searchKeys":["arity","open override val arity: Int = 1","io.github.kapkekes.operations.basic.SquareRoot.arity"]},{"name":"open override val arity: Int = 1","description":"io.github.kapkekes.operations.trigonometry.Cosine.arity","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-cosine/arity.html","searchKeys":["arity","open override val arity: Int = 1","io.github.kapkekes.operations.trigonometry.Cosine.arity"]},{"name":"open override val arity: Int = 1","description":"io.github.kapkekes.operations.trigonometry.Degree.arity","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-degree/arity.html","searchKeys":["arity","open override val arity: Int = 1","io.github.kapkekes.operations.trigonometry.Degree.arity"]},{"name":"open override val arity: Int = 1","description":"io.github.kapkekes.operations.trigonometry.Sine.arity","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-sine/arity.html","searchKeys":["arity","open override val arity: Int = 1","io.github.kapkekes.operations.trigonometry.Sine.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.basic.Addition.arity","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-addition/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.basic.Addition.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.basic.Division.arity","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-division/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.basic.Division.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.basic.Logarithm.arity","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-logarithm/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.basic.Logarithm.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.basic.Multiplication.arity","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-multiplication/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.basic.Multiplication.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.basic.Power.arity","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-power/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.basic.Power.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.basic.Subtraction.arity","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-subtraction/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.basic.Subtraction.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.logic.Equality.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-equality/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.logic.Equality.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.logic.Greater.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.logic.Greater.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.logic.GreaterOrEqual.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater-or-equal/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.logic.GreaterOrEqual.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.logic.Inequality.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-inequality/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.logic.Inequality.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.logic.Less.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.logic.Less.arity"]},{"name":"open override val arity: Int = 2","description":"io.github.kapkekes.operations.logic.LessOrEqual.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less-or-equal/arity.html","searchKeys":["arity","open override val arity: Int = 2","io.github.kapkekes.operations.logic.LessOrEqual.arity"]},{"name":"open override val arity: Int = 3","description":"io.github.kapkekes.operations.logic.IfElse.arity","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-if-else/arity.html","searchKeys":["arity","open override val arity: Int = 3","io.github.kapkekes.operations.logic.IfElse.arity"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.basic.Addition.token","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-addition/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.basic.Addition.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.basic.Division.token","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-division/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.basic.Division.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.basic.Logarithm.token","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-logarithm/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.basic.Logarithm.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.basic.Multiplication.token","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-multiplication/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.basic.Multiplication.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.basic.Power.token","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-power/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.basic.Power.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.basic.SquareRoot.token","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-square-root/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.basic.SquareRoot.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.basic.Subtraction.token","location":"-task_1_5_1/io.github.kapkekes.operations.basic/-subtraction/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.basic.Subtraction.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.flow.Exit.token","location":"-task_1_5_1/io.github.kapkekes.operations.flow/-exit/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.flow.Exit.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.Equality.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-equality/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.Equality.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.False.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-false/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.False.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.Greater.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.Greater.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.GreaterOrEqual.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-greater-or-equal/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.GreaterOrEqual.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.IfElse.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-if-else/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.IfElse.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.Inequality.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-inequality/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.Inequality.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.Less.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.Less.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.LessOrEqual.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-less-or-equal/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.LessOrEqual.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.logic.True.token","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-true/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.logic.True.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.trigonometry.Cosine.token","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-cosine/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.trigonometry.Cosine.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.trigonometry.Degree.token","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-degree/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.trigonometry.Degree.token"]},{"name":"open override val token: String","description":"io.github.kapkekes.operations.trigonometry.Sine.token","location":"-task_1_5_1/io.github.kapkekes.operations.trigonometry/-sine/token.html","searchKeys":["token","open override val token: String","io.github.kapkekes.operations.trigonometry.Sine.token"]},{"name":"open val definition: Pair<String, Pair<Int, Action>>","description":"io.github.kapkekes.calculator.Operation.definition","location":"-task_1_5_1/io.github.kapkekes.calculator/-operation/definition.html","searchKeys":["definition","open val definition: Pair<String, Pair<Int, Action>>","io.github.kapkekes.calculator.Operation.definition"]},{"name":"operator fun div(other: Complex): Complex","description":"io.github.kapkekes.complex.Complex.div","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/div.html","searchKeys":["div","operator fun div(other: Complex): Complex","io.github.kapkekes.complex.Complex.div"]},{"name":"operator fun div(other: Double): Complex","description":"io.github.kapkekes.complex.Complex.div","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/div.html","searchKeys":["div","operator fun div(other: Double): Complex","io.github.kapkekes.complex.Complex.div"]},{"name":"operator fun minus(other: Complex): Complex","description":"io.github.kapkekes.complex.Complex.minus","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/minus.html","searchKeys":["minus","operator fun minus(other: Complex): Complex","io.github.kapkekes.complex.Complex.minus"]},{"name":"operator fun minus(other: Double): Complex","description":"io.github.kapkekes.complex.Complex.minus","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/minus.html","searchKeys":["minus","operator fun minus(other: Double): Complex","io.github.kapkekes.complex.Complex.minus"]},{"name":"operator fun plus(other: Complex): Complex","description":"io.github.kapkekes.complex.Complex.plus","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/plus.html","searchKeys":["plus","operator fun plus(other: Complex): Complex","io.github.kapkekes.complex.Complex.plus"]},{"name":"operator fun plus(other: Double): Complex","description":"io.github.kapkekes.complex.Complex.plus","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/plus.html","searchKeys":["plus","operator fun plus(other: Double): Complex","io.github.kapkekes.complex.Complex.plus"]},{"name":"operator fun times(other: Complex): Complex","description":"io.github.kapkekes.complex.Complex.times","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/times.html","searchKeys":["times","operator fun times(other: Complex): Complex","io.github.kapkekes.complex.Complex.times"]},{"name":"operator fun times(other: Double): Complex","description":"io.github.kapkekes.complex.Complex.times","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/times.html","searchKeys":["times","operator fun times(other: Double): Complex","io.github.kapkekes.complex.Complex.times"]},{"name":"operator fun unaryMinus(): Complex","description":"io.github.kapkekes.complex.Complex.unaryMinus","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): Complex","io.github.kapkekes.complex.Complex.unaryMinus"]},{"name":"val absoluteValue: Double","description":"io.github.kapkekes.complex.Complex.absoluteValue","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/absolute-value.html","searchKeys":["absoluteValue","val absoluteValue: Double","io.github.kapkekes.complex.Complex.absoluteValue"]},{"name":"val conjugate: Complex","description":"io.github.kapkekes.complex.Complex.conjugate","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/conjugate.html","searchKeys":["conjugate","val conjugate: Complex","io.github.kapkekes.complex.Complex.conjugate"]},{"name":"val imaginary: Double = 0.0","description":"io.github.kapkekes.complex.Complex.imaginary","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/imaginary.html","searchKeys":["imaginary","val imaginary: Double = 0.0","io.github.kapkekes.complex.Complex.imaginary"]},{"name":"val isReal: Boolean","description":"io.github.kapkekes.complex.Complex.isReal","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/is-real.html","searchKeys":["isReal","val isReal: Boolean","io.github.kapkekes.complex.Complex.isReal"]},{"name":"val real: Double = 0.0","description":"io.github.kapkekes.complex.Complex.real","location":"-task_1_5_1/io.github.kapkekes.complex/-complex/real.html","searchKeys":["real","val real: Double = 0.0","io.github.kapkekes.complex.Complex.real"]},{"name":"val value: Complex","description":"io.github.kapkekes.operations.logic.False.value","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-false/value.html","searchKeys":["value","val value: Complex","io.github.kapkekes.operations.logic.False.value"]},{"name":"val value: Complex","description":"io.github.kapkekes.operations.logic.True.value","location":"-task_1_5_1/io.github.kapkekes.operations.logic/-true/value.html","searchKeys":["value","val value: Complex","io.github.kapkekes.operations.logic.True.value"]}]
